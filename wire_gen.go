// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/go-playground/validator/v10"
	"github.com/google/wire"
	"net/http"
	"sclearn/learn-golang/app"
	"sclearn/learn-golang/controller"
	"sclearn/learn-golang/middleware"
	"sclearn/learn-golang/repository"
	"sclearn/learn-golang/service"
)

import (
	_ "github.com/go-sql-driver/mysql"
)

// Injectors from injector.go:

func InitializedServer() *http.Server {
	userRepositoryImpl := repository.NewUserRepository()
	db := app.NewDB()
	validate := validator.New()
	userServiceImpl := service.NewUserService(userRepositoryImpl, db, validate)
	userControllerImpl := controller.NewUserController(userServiceImpl)
	router := app.NewRouter(userControllerImpl)
	authMiddleware := middleware.NewAuthMiddleware(router)
	server := NewServer(authMiddleware)
	return server
}

// injector.go:

var userSet = wire.NewSet(repository.NewUserRepository, wire.Bind(new(repository.UserRepository), new(*repository.UserRepositoryImpl)), service.NewUserService, wire.Bind(new(service.UserService), new(*service.UserServiceImpl)), controller.NewUserController, wire.Bind(new(controller.UserController), new(*controller.UserControllerImpl)))
